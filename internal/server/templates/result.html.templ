package templates

import (
	"bytes"
	"context"
	"fmt"
	"strings"
)

func componentToString(ctx context.Context, comp templ.Component) string {
	buf := new(bytes.Buffer)
	comp.Render(ctx, buf)

	return strings.ReplaceAll(buf.String(), "\n", "")
}

templ CopyInput(label, value string) {
	<label onclick="copyToClipboard(event)" for={ "#copy_" + label } class="flex items-center cursor-pointer">
		<span class="w-14 text-sm">{ label }</span>
		<div class="relative rounded-sm shadow-sm">
			<input id={ "copy_"+label } type="text" readonly value={ value } class="block w-full rounded-sm border-0 pr-9 text-gray-300 text-sm"/>
			<span class="absolute inset-y-0 right-2 flex items-center">
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256"><path fill="#888888" d="M200 32h-36.26a47.92 47.92 0 0 0-71.48 0H56a16 16 0 0 0-16 16v168a16 16 0 0 0 16 16h144a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16m-72 0a32 32 0 0 1 32 32H96a32 32 0 0 1 32-32"/></svg>
			</span>
		</div>
	</label>
}

templ Result(steamID, avatarURL, frameURL, baseURL string) {
	<div class="flex flex-row gap-2">
		@Avatar(steamID, avatarURL, frameURL)
		<div class="flex flex-col justify-around border-l pl-4 border-gray-500">
			@CopyInput("Link", baseURL)
			@CopyInput("SVG", componentToString(ctx, Avatar(steamID, avatarURL, frameURL)))
			@CopyInput("IMG", fmt.Sprintf("<img src=\"%s\" alt=\"%s\" />", baseURL, "Steam Avatar of "+steamID))
			@CopyInput("Object", fmt.Sprintf("<object data=\"%s\"type=\"image/svg+xml\" />", baseURL))
		</div>
	</div>
}
